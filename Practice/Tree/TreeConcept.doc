树的基本概念和术语
树：是一种非线性的数据结构，
    1.有且仅有一个特定的称为根的结点，它仅有后继，没有前驱
    2. 除根以外的其它结点被划分为互不相交的有限集合，其中每一个结合又都是树
双亲与子女：结点的子树的根称为该结点的子女，繁殖，该结点称为子女结点的双亲
兄弟：同一双亲的子女之间互为兄弟
祖先与子孙：
边：两个结点的有序对
结点的度数：结点所拥有的子树的颗数
树叶：度数为0的结点
分支：度数不为零的结点
树的高度：树种结点最大的层数。（从0开始）
树的度：树种结点的度数的最大值
有序树与无序树
森林：零棵或者多棵不想交的数的集合

树的前序中序后序和层次遍历
前序（NLR),中序（LNR), 后续（LRN)

二叉树及其性质
二叉树：每个结点最多只有两个子女，并且二叉树的子树有左右之分，其子树的次序不能随意颠倒。
性质1： 二叉树的第i层上至多有2^i个结点（i>=0)
性质2： 高度为h的二叉树至多有2^(h+1) - 1 个结点
性质3： 在任意一颗二叉树中，若叶节点的个数为n0，度为2的节点个数为n2,则n0=n2+1

普通树和二叉树的转换
普通数转换为二叉树步骤： 1. 凡是兄弟就用线连起来；除第一个子女外的其它子女均去除与父母的连接
二叉树转换为普通数步骤: 
1. 若某结点的左孩子结点存在，将左孩子结点的右孩子结点、右孩子结点的右孩子结点……都作为该结点的孩子结点，将该结点与这些右孩子结点用线连接起来；
2. 去掉父母与右子女的连线

树的存储结构，标准形式
链式存储(Node/TreeNode)
顺序存储： 适用于结构和大小不发生较大的动态变化

完全树的数组形式存储
完全二叉树：如果一棵二叉树至多只有最下边的两层结点的度数可以小于2,并且最下面一层的结点都集中在改成的最左边的若干位置上

树的应用
哈夫曼树的定义与应用